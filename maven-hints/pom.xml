<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>java-all-hints</artifactId>
        <groupId>java-all-hints</groupId>
        <version>1.0-SNAPSHOT</version>
        <!--
        1) Если надо указать на определённый ПОМ, то указывается:
            <relativePath>.../pom.xml</relativePath>
        2) Родитель должен иметь <packaging>pom</packaging>, а вот чайлд уже jar\war (jar и так по умолчанию)
        3) Смотри инфо про Аггрегацию и наследование в Парент Поме
        -->
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>maven-hints</artifactId> <!-- Current project - for example HK Parser  -->
    <version>1.0-SNAPSHOT</version> <!-- If the label SNAPSHOT added - maven every time will check new version -->

    <name>MavenExamples</name>
    <url>http://maven.apache.org</url>

    <!-- PROPERTIES - regexp see in README.MD -->
    <properties>
        <junit.version>4.12</junit.version> <!-- Any name like junit.version -->

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version> <!-- Можно обойтись тоько этим определением версии джавы -->
        <maven.compiler.source>1.8</maven.compiler.source>  <!-- Не важные - С чего собираем-->
        <maven.compiler.target>1.8</maven.compiler.target>  <!-- Не важные -Какая совместимость по байт коду-->
    </properties>


    <!-- DEPENDENCIES -->
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>  <!-- Using props junit.version -->
            <scope>test</scope>
        </dependency>

        <!--EXTERNAL LOCAL DEPENDENCY
        <dependency>
            <groupId>extDependency</groupId>
            <artifactId>extDependency</artifactId>
            <scope>system</scope>
            <version>1.0</version>
            <systemPath>${basedir}\war\WEB-INF\lib\extDependency.jar</systemPath>   !!!!!!!!!!!!! jcon для Sybase к примеру
        </dependency>
        -->

        <!--AVOIDING TRANSITIVE DEPENDENCY
        <dependency>
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit</artifactId>
            <version>${dbunit.version}</version>
            <scope>test</scope>
            <exclusions>
                README.MDExclude transitive dependency to JUnit-3.8.2
                <exclusion>
                    <artifactId>junit</artifactId>
                    <groupId>junit</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        -->

    </dependencies>

    <!-- Оверайдим REMOTE repository -->
    <repositories>
        <repository>
            <id>org.source.repo</id>
            <url>http://maven.orgName.com/maven2/</url>
        </repository>
    </repositories>

    <build>
        <plugins>
            <!-- ПЛАГИН ЛИМИТАТОР НА ОПРЕДЕЛЁННЫЕ ВЕРСИИ Maven version, JDK version and OS family
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0-M2</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>2.0.6</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>1.5</version>
                                </requireJavaVersion>
                                <requireOs>
                                    <family>unix</family>
                                </requireOs>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            -->
        </plugins>
    </build>

</project>